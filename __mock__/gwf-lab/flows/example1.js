export default {
  flow: {
    nodes: [
      {
        id: 2,
        type: 'SELECT_AND_FREEFORM',
        label: 'Select or Free Form',
        placeholder: 'Well...',
        renderTo: 'CONTENT_A',
        start: true,
        outcomeId: [3],
        action: 'OUTCOME_ID',
        isInput: true,
        required: true,
        inputName: 'selectOrOther',
        back: 1,
        options: [
          {
            id: 1,
            text: 'Option A',
            value: 'Option A',
          },
          {
            id: 2,
            text: 'Option B',
            value: 'Option B',
          },
          {
            id: 3,
            text: 'Option C',
            value: 'Option C',
          },
          {
            id: 4,
            text: 'Option D',
            value: 'Option D',
          },
          {
            id: 5,
            text: 'Other',
            value: 'Other',
          },
        ],
        freeformLabel: 'Other',
        freeformPlaceholder: 'Option Z',
        freeformInputName: 'selectOrOtherFreeform',
        asColumn: true,
      },
      {
        id: 3,
        type: 'TEXT',
        label: 'Describe Your Issue',
        placeholder: 'Everything is broke',
        renderTo: 'CONTENT_A',
        outcomeId: [4, 9],
        back: 2,
        action: 'OUTCOME_ID',
        isInput: true,
        required: true,
        inputName: 'initialText',
      },
      {
        id: 4,
        type: 'INTEGER',
        label: 'How Many Affected?',
        min: 1,
        max: 5,
        renderTo: 'CONTENT_B',
        outcomeId: [6],
        back: 3,
        isInput: true,
        required: true,
        inputName: 'flow1Num1',
      },
      {
        id: 6,
        type: 'INTEGER',
        label: 'How Many Lost?',
        min: 5,
        max: 10,
        renderTo: 'CONTENT_B',
        outcomeId: [5555],
        back: 4,
        isInput: true,
        required: true,
        inputName: 'flow1Num2',
      },
      {
        id: 5555,
        type: 'CONTAINER',
        direction: 'row',
        renderTo: 'CONTENT_B',
        back: 6,
        nodes: [
          {
            id: 7,
            type: 'TEXT',
            label: '${CONTEXT}flow1Num1',
            placeholder: 'Example Placeholder',
            renderTo: 'CONTENT_B',
            back: 6,
            isInput: true,
            inputName: 'flow1Text1',
          },
          {
            id: 8,
            type: 'TEXT',
            text: 'Thread 1',
            label: '${CONTEXT}flow1Num1',
            placeholder: 'Example Placeholder',
            renderTo: 'CONTENT_B',
            back: 6,
            isInput: true,
            inputName: 'flow1Text2',
          },
        ],
      },
      {
        id: 9,
        type: 'INTEGER',
        label: 'Example Number',
        required: true,
        isInput: true,
        min: 1,
        max: 100,
        renderTo: 'CONTENT_C',
        outcomeId: [10],
        back: 3,
        action: 'OUTCOME_ID',
        inputName: 'flow1dynamicNum1',
      },
      {
        id: 10,
        type: 'INTEGER',
        label: 'Example Number Two',
        required: true,
        min: 1,
        max: 100,
        renderTo: 'CONTENT_C',
        outcomeId: [11],
        back: 9,
        isInput: true,
        inputName: 'flow1dynamicNum2',
      },
      {
        id: 11,
        type: 'BUTTON',
        text: 'Thread 2',
        renderTo: 'CONTENT_C',
        back: 10,
        action: 'TRANSITION',
        nextFlow: 'example2',
      },
      {
        id: 11,
        type: 'BUTTON',
        text: 'Thread 2',
        renderTo: 'CONTENT_C',
        back: 10,
        action: 'TRANSITION',
        nextFlow: 'example2',
      },
    ],
  },
  context: {
    selectOrOther: 'Option B',
    initialText: 'Initial Context Data',
    flow1Text1: 'default value',
  },
};
